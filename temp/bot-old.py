import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters
)
import smtplib
from email.mime.text import MIMEText

# –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
GET_NAME, GET_LIVE_COUNTRY = range(2)

# –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("New Zealand", callback_data="New Zealand")],
        [InlineKeyboardButton("Australia", callback_data="Australia")],
        [InlineKeyboardButton("Canada", callback_data="Canada")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:", reply_markup=reply_markup)

# –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã
async def country_selected(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    country = query.data
    context.user_data['country'] = country
    await query.answer()

    await query.edit_message_text(
        text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {country}.\n\nüí≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –æ–ø–ª–∞—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å 100 NZD", url="https://your-payment-link.com")]
        ])
    )

    await context.bot.send_message(chat_id=query.message.chat_id, text="–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /continue")

# –ö–æ–º–∞–Ω–¥–∞ /continue
async def start_data_collection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    return GET_NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['name'] = update.message.text
    await update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –≤–∞—à–µ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:")
    return GET_LIVE_COUNTRY

async def get_live_country(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['live_country'] = update.message.text

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ email
    send_email(
        name=context.user_data['name'],
        selected_country=context.user_data['country'],
        live_country=context.user_data['live_country']
    )

    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ. –ê–¥–≤–æ–∫–∞—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ Telegram.")
    return ConversationHandler.END

# –û—Ç–ø—Ä–∞–≤–∫–∞ email
def send_email(name, selected_country, live_country):
    body = f"""–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:
–§–ò–û: {name}
–í—ã–±—Ä–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞: {selected_country}
–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: {live_country}
"""

    msg = MIMEText(body)
    msg['Subject'] = '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞'
    msg['From'] = 'yourbot@gmail.com'
    msg['To'] = 'nzadvocat@gmail.com'

    with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp:
        smtp.login('yourbot@gmail.com', 'your_app_password')  # –í—Å—Ç–∞–≤—å –∑–¥–µ—Å—å App Password!
        smtp.send_message(msg)

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = ApplicationBuilder().token("7770078456:AAHC411S5upMBRLkHY1GixA0JBGtqWYRs2I").build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(country_selected))

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("continue", start_data_collection)],
        states={
            GET_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            GET_LIVE_COUNTRY: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_live_country)],
        },
        fallbacks=[],
    )
    app.add_handler(conv_handler)

    app.run_polling()

if __name__ == '__main__':
    main()
